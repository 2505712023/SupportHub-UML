const inputt = document.getElementById("nombre"), inputBuscador = document.getElementById("inputBuscador"), suggestionsDiv1 = document.getElementById("suggestions1"), suggestionsDiv2 = document.getElementById("suggestions2"); function BuscarCoincidencias() { const e = inputt.value, t = inputBuscador.value; let o = ""; e.length > 0 || t.length > 0 ? (e.length > 0 ? o = e : t.length > 0 && (o = t), fetch(`/Usuario/mostrarUsuarios?handler=Empleados&term=${encodeURIComponent(o)}`).then((e => e.json())).then((o => { e.length > 0 ? (console.log("datos recibidos: ", o), suggestionsDiv2.innerHTML = "", o.forEach((e => { console.log("item :", e); const t = document.createElement("div"); t.textContent = e.nombreCompleto, console.log("agregando:", t.textContent), t.classList.add("suggestion-item"), suggestionsDiv2.appendChild(t) }))) : t.length > 0 && (console.log("datos recibidos: ", o), suggestionsDiv1.innerHTML = "", o.forEach((e => { console.log("item :", e); const t = document.createElement("div"); t.textContent = e.nombreCompleto, console.log("agregando:", t.textContent), t.classList.add("suggestion-item"), suggestionsDiv1.appendChild(t) }))) })).catch((e => console.error("Error de fetch en: ", e)))) : (suggestionsDiv1.innerHTML = "", suggestionsDiv2.innerHTML = "") } function llenarModalModificarUsuario(e) { var t = $(e).closest("tr"); $(".modal #esModificacion").val("true"), $(".modal h1").text("Modificar Usuarios"), $(".modal #id").val(t.data("id")), $(".modal #usuario").val(t.data("usuario")), $(".modal #activo").val(t.data("activo")), $(".modal #nombre").val(t.data("empleado")), $(".modal #contraseña").val(t.data("contra")), $(".modal #TipoUsuario").val(t.data("rol")), $(".modal #contraseña").prop("type", "password"), $(".modal #activo").prop("checked", "True" == t.data("activo")) } function limpiarModalModificarUsuario() { suggestionsDiv2.innerHTML = "", $(".modal #esModificacion").val("false"), $(".modal h1").text("Agregar Proveedor"), $("#formAgregarUsuario")[0].reset(), $(".modal #nombre").prop("readonly", !1), $('label[for="TipoUsuario"]').show(), $('label[for="contraseña"]').show(), $("#contraseña").prop("type", "password"), $("#contra2").prop("type", "password"), $("#ojo1").removeClass("bi-eye").addClass("bi-eye-slash"), $("#ojo2").removeClass("bi-eye").addClass("bi-eye-slash") } function limpiarModalEliminar() { $(".modal#Eliminar #esEliminacion").val("false"), $("#formEliminarUsuario")[0].reset() } function llenarModalEliminar(e) { var t = $(e).closest("tr"); $(".modal#Eliminar #usuario").val(t.data("usuario")), $(".modal#Eliminar #esEliminacion").val("true"), $("#Eliminar").on("shown.bs.modal", (function () { $("#btnEliminar").focus() })) } function validarFormularioUsuario() { var e = document.getElementById("usuario").value.trim(), t = document.getElementById("nombre").value.trim(), o = (document.getElementById("activo").value.trim(), document.getElementById("contraseña").value.trim()), a = document.getElementById("contra2").value.trim(), n = document.getElementById("TipoUsuario").value.trim(); return "" === e ? (Swal.fire({ icon: "error", title: "Oops...", text: "Nombre de usuario es requerido!" }), !1) : e.length > 25 ? (Swal.fire({ icon: "error", title: "Oops...", text: "El nombre de usuario solo permite 25 caracteres!" }), !1) : "" == t || t.length < 7 ? (Swal.fire({ icon: "error", title: "Oops...", text: "Debe especificar al menos el código de empleado con 7 caracteres" }), !1) : null == n || "" == n ? (Swal.fire({ icon: "error", title: "Oops...", text: "Debe especificar el rol del usuario" }), !1) : null != o && "" != o || null == a && "" == a ? "" !== o && "" !== a && o !== a ? (Swal.fire({ icon: "error", title: "Oops...", text: "Las contraseñas no coinciden" }), !1) : "" == o || /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/.test(o) ? void document.getElementById("formAgregarUsuario").submit() : (Swal.fire({ icon: "error", title: "Oops...", text: "La nueva contraseña debe tener al menos 8 caracteres, incluyendo mayúsculas, minúsculas, números y caracteres especiales." }), !1) : (Swal.fire({ icon: "error", title: "Oops...", text: "Asegúrese de llenar ambos campos de contraseña" }), !1) } function validarFormularioEliminar() { if ("" === $(".modal#Eliminar #usuario").val().trim()) return Swal.fire({ icon: "error", title: "Oops...", text: "Usuario es requerido!" }), !1; submitFormEliminar() } function submitFormEliminar() { document.getElementById("formEliminarUsuario").submit() } inputt.addEventListener("input", BuscarCoincidencias), inputBuscador.addEventListener("input", BuscarCoincidencias), suggestionsDiv2.addEventListener("click", (function (e) { e.target.classList.contains("suggestion-item") && (inputt.value = e.target.textContent, suggestionsDiv2.innerHTML = "") })), suggestionsDiv1.addEventListener("click", (function (e) { e.target.classList.contains("suggestion-item") && (inputBuscador.value = e.target.textContent, suggestionsDiv1.innerHTML = "") })), document.addEventListener("DOMContentLoaded", (function () { const e = 8, t = document.getElementById("TBody"), o = Array.from(t.querySelectorAll("tr")), a = document.querySelector(".pagination-list"), n = Math.ceil(o.length / e); function i(s) { t.innerHTML = ""; const r = (s - 1) * e, l = Math.min(r + e, o.length); o.slice(r, l).forEach((e => { t.appendChild(e) })), function (e) { a.innerHTML = ""; for (let t = 1; t <= n; t++) { const o = document.createElement("li"); o.className = "page-item"; const n = document.createElement("span"); n.className = "page-dot", t === e && n.classList.add("active"), n.addEventListener("click", (function () { i(t) })), o.appendChild(n), a.appendChild(o) } }(s) } i(1); const s = document.getElementById("contraseña"), r = document.getElementById("contra2"), l = document.getElementById("ojo1"), c = document.getElementById("ojo2"); l && c && s && r && (l.addEventListener("click", (() => { "password" === s.type ? (s.type = "text", l.classList.remove("bi-eye-slash"), l.classList.add("bi-eye")) : (s.type = "password", l.classList.remove("bi-eye"), l.classList.add("bi-eye-slash")) })), c.addEventListener("click", (() => { "password" === r.type ? (r.type = "text", c.classList.remove("bi-eye-slash"), c.classList.add("bi-eye")) : (r.type = "password", c.classList.remove("bi-eye"), c.classList.add("bi-eye-slash")) }))) }));